@model ADJ.BusinessService.Dtos.OrderDTO;

<h3>PO Manager</h3>

<span class="uk-alert-danger">@ViewBag.OrderDetailError</span>

<form asp-action="Create" asp-controller="PurchaseOrder" id="orderForm">
  <input asp-for="Id" value=@Model.Id type="hidden" />
  <input asp-for="RowVersion" value=@Model.RowVersion type="hidden" />
  <input asp-for="orderDetailDTO.Id" value=@Model.orderDetailDTO.Id type="hidden" />

  <h4>@ViewBag.Method</h4>
  <hr />

  <table class="uk-table">
    <tr>
      <td>
        <label asp-for="PONumber"></label>
      </td>
      <td>
        <input asp-for="PONumber" class="uk-input" id="from" onkeyup="copy()" />
        <span asp-validation-for="PONumber" class="uk-alert-danger"></span>
        @ViewBag.PONumberError
      </td>
      <td colspan="3"></td>
      <td>
        <button type="button" value="Apply" class="uk-button uk-button-default" name="method" id="applyButton">Apply</button>
      </td>
    </tr>
    <tr>
      <td>
        <label asp-for="PONumber"></label>
      </td>
      <td>
        <div class="col-md-10">
          <input asp-for="PONumber" class="uk-input" id="to" onkeyup="copy2()" />
          <span asp-validation-for="PONumber" class="uk-alert-danger"></span>
          @ViewBag.ErrorMessage
        </div>
      </td>
      <td>
        <label asp-for="Vendor"></label>
      </td>
      <td>
        <div>
          <input asp-for="Vendor" class="uk-input" />
          <span asp-validation-for="Vendor" class="uk-alert-danger"></span>
        </div>
      </td>
      <td>
        <label asp-for="Mode"></label>
      </td>
      <td>
        <div class="col-md-10">
          <select asp-for="Mode" asp-items="new SelectList(ViewBag.Modes)" class="uk-input"></select>
          <span asp-validation-for="Mode" class="uk-alert-danger"></span>
        </div>
      </td>
    </tr>
    <tr>
      <td>
        <label asp-for="OrderDate"></label>
      </td>
      <td>
        <div class="col-md-10">
          <input asp-for="OrderDate" class="uk-input" type="date" value=@DateTime.Now.ToString("yyyy-MM-dd") />
          <span asp-validation-for="OrderDate" class="uk-alert-danger"></span>
        </div>
      </td>
      <td>
        <label asp-for="Company"></label>
      </td>
      <td>
        <div class="col-md-10">
          <input asp-for="Company" class="uk-input" />
          <span asp-validation-for="Company" class="uk-alert-danger"></span>
        </div>
      </td>
      <td>
        <label asp-for="ShipDate"></label>
      </td>
      <td>
        <div class="col-md-10">
          <input asp-for="ShipDate" class="uk-input" type="date" value=@DateTime.Now.ToString("yyyy-MM-dd") />
          <span asp-validation-for="ShipDate" class="uk-alert-danger"></span>
        </div>
      </td>
    </tr>
    <tr>
      <td>
        <label asp-for="Buyer"></label>
      </td>
      <td>
        <div class="col-md-10">
          <input asp-for="Buyer" class="uk-input" />
          <span asp-validation-for="Buyer" class="uk-alert-danger"></span>
        </div>
      </td>
      <td>
        <label asp-for="Origin"></label>
      </td>
      <td>
        <div class="col-md-10">
          <select asp-for="Origin" asp-items="new SelectList(ViewBag.Origins)" class="uk-input"></select>
          <span asp-validation-for="Origin" class="uk-alert-danger"></span>
        </div>
      </td>
      <td>
        <label asp-for="LatestShipDate"></label>
      </td>
      <td>
        <div class="col-md-10">
          <input asp-for="LatestShipDate" class="uk-input" type="date" value=@DateTime.Now.ToString("yyyy-MM-dd") />
          <span asp-validation-for="LatestShipDate" class="uk-alert-danger"></span>
        </div>
      </td>
    </tr>
    <tr>
      <td>
        <label asp-for="Currency"></label>
      </td>
      <td>
        <div class="col-md-10">
          <select asp-for="Currency" asp-items="new SelectList(ViewBag.Currencies)" class="uk-input"></select>
          <span asp-validation-for="Currency" class="uk-alert-danger"></span>
        </div>
      </td>
      <td>
        <label asp-for="PortOfLoading"></label>
      </td>
      <td>
        <div class="col-md-10">
          <select asp-for="PortOfLoading" asp-items="new SelectList(ViewBag.Ports)" class="uk-input"></select>
          <span asp-validation-for="PortOfLoading" class="uk-alert-danger"></span>
        </div>
      </td>
      <td>
        <label asp-for="DeliveryDate"></label>
      </td>
      <td>
        <div class="col-md-10">
          <input asp-for="DeliveryDate" class="uk-input" type="date" value=@DateTime.Now.ToString("yyyy-MM-dd") />
          <span asp-validation-for="DeliveryDate" class="uk-alert-danger"></span>
        </div>
      </td>
    </tr>
    <tr>
      <td>
        <label asp-for="Season"></label>
      </td>
      <td>
        <div class="col-md-10">
          <select asp-for="Season" asp-items="new SelectList(ViewBag.Seasons)" class="uk-input"></select>
          <span asp-validation-for="Season" class="uk-alert-danger"></span>
        </div>
      </td>
      <td>
        <label asp-for="PortOfDelivery"></label>
      </td>
      <td>
        <div class="col-md-10">
          <select asp-for="PortOfDelivery" asp-items="new SelectList(ViewBag.Ports)" class="uk-input"></select>
          <span asp-validation-for="PortOfDelivery" class="uk-alert-danger"></span>
        </div>
      </td>
      <td>
        <label asp-for="OrderType"></label>
      </td>
      <td>
        <div class="col-md-10">
          <input asp-for="OrderType" class="uk-input" />
          <span asp-validation-for="OrderType" class="uk-alert-danger"></span>
        </div>
      </td>
    </tr>
    <tr>
      <td>
        <label asp-for="Department"></label>
      </td>
      <td>
        <div class="col-md-10">
          <input asp-for="Department" class="uk-input" />
          <span asp-validation-for="Department" class="uk-alert-danger"></span>
        </div>
      </td>
      <td>
        <label asp-for="Factory"></label>
      </td>
      <td>
        <div class="col-md-10">
          <input asp-for="Factory" class="uk-input" />
          <span asp-validation-for="Factory" class="uk-alert-danger"></span>
        </div>
      </td>
      <td>
        <label asp-for="Status"></label>
      </td>
      <td>
        <div class="col-md-10">
          <select asp-for="Status" asp-items="new SelectList(ViewBag.Statuses)" class="uk-input"></select>
          <span asp-validation-for="Status" class="uk-alert-danger"></span>
        </div>
      </td>
    </tr>
  </table>

  <button type="button" value="AddItem" name="method" class="uk-button uk-button-default" id="addItemButton">Add Item</button>

  @if (Model.PODetails != null)
  {
    <input asp-for="PODetails.TotalCount" value=@Model.PODetails.TotalCount type="hidden" />
    <input asp-for="PODetails.PageCount" value=@Model.PODetails.PageCount type="hidden" />
  }
  <div id="orderDetailPartial">
    <partial name="_OrderDetail" model="Model" />
  </div>

</form>

@*
  <a asp-action="Copy"
     asp-route-page="@(Model.PODetails.PageCount - 1)"
     class="btn btn-default">
    Previous
  </a>
  <a asp-action="Copy"
     asp-route-page="@(Model.PODetails.PageCount + 1)"
     class="btn btn-default">
    Next
  </a>*@

<div>
  <a asp-controller="PurchaseOrder" asp-action="Index">Back to List</a>
</div>

@section Scripts
  {
  @*@{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }*@
  <script type="text/javascript">
    $("#to").keyup(function () { $("#from").val($("#to").val()); });
    $("#from").keyup(function () { $("#to").val($("#from").val()); });

    //$("#Quantity").keyup(function () {
    //  $("#TotalUnit").html($("#Quantity").val() * $("#UnitPrice").val());
    //  $("#TotalRetail").html($("#Quantity").val() * $("#RetailPrice").val());
    //});
    //$("#UnitPrice").keyup(function (event) { $("#TotalUnit").html($("#Quantity").val()); });
    //$("#RetailPrice").keyup(function () { $("#TotalRetail").html($("#Quantity").val() * $("#RetailPrice").val()); });
    function getTotalUnit() {
      document.getElementById("TotalUnit").innerHTML = document.getElementById("Quantity").value * document.getElementById("UnitPrice").value;
    };
    function getTotalRetail() {
      document.getElementById("TotalRetail").innerHTML = document.getElementById("Quantity").value * document.getElementById("RetailPrice").value;
    };

    $("#addItemButton").click(function () {
      var addModel = @Html.Raw(Json.Serialize(Model));
      var orderDetails = [];
      var items = document.getElementsByClassName("newItem");
      $.each(items, function () {
        orderDetails.push($(this).val());
      });

      $.ajax({
        type: "POST",
        data: {
          addModel: addModel,
          method: "AddItem",
          orderDetails: orderDetails
        },
        url: "@Url.Action("AddItem", "PurchaseOrder")",
        success: function (objOperations) {
          $("#orderDetailPartial").html(objOperations);
          rebindValidators();
        }
      });
    });

    function rebindValidators() {
      var $form = $("#orderForm");
      $form.unbind();
      $form.data("validator", null);
      $.validator.unobtrusive.parse($form);
      $form.validate($form.data("unobtrusiveValidation").options);
    }

    @*$("#applyButton").click(function () {
      var addModel = @Html.Raw(Json.Serialize(Model));
      var orderDetails = [];
      $.each($("input[id='itemProperty']"), function () {
        orderDetails.push($(this).val());
      });

      $.ajax({
        type: "POST",
        data: {
          orderDetails: orderDetails,
          progressCheckDTOs: addModel
        },
        url: "@Url.Action("Create", "PurchaseOrder")",
        success: function () {
          alert("Success");
        }
      });

      //$("#orderForm").append('<input>');
      //$("#orderForm").submit();
      //document.getElementById("detailForm").submit().val("test");
    });*@

    //parseValidation = function (newInputHTML) {
    //  //var container = document.getElementById("form-container");
    //  //container.insertAdjacentHTML("beforeend", newFormHTML);
    //  //var forms = container.getElementsByTagName("form");
    //  //var newForm = forms[forms.length - 1];
    //  var form = document.getElementById("detailForm");
    //  form.insertAdjacentHTML("beforeend", newInputHTML);
    //  $(form).removeData("validator")    // Added by jQuery Validate
    //    .removeData("unobtrusiveValidation");   // Added by jQuery Unobtrusive Validation
    //  $.validator.unobtrusive.parse(newForm);
    //};

    //$.get({
    //  url: "",
    //  dataType: "html",
    //  error: function (jqXHR, textStatus, errorThrown) {
    //    alert(textStatus + ": Couldn't add form. " + errorThrown);
    //  },
    //  success: function (newFormHTML) {
    //    var container = document.getElementById("form-container");
    //    container.insertAdjacentHTML("beforeend", newFormHTML);
    //    var forms = container.getElementsByTagName("form");
    //    var newForm = forms[forms.length - 1];
    //    $.validator.unobtrusive.parse(newForm);
    //  }
    //});

    //$.get({
    //  url: "",
    //  dataType: "html",
    //  error: function (jqXHR, textStatus, errorThrown) {
    //    alert(textStatus + ": Couldn't add control. " + errorThrown);
    //  },
    //  success: function (newInputHTML) {
        //var form = document.getElementById("detailForm");
        //form.insertAdjacentHTML("beforeend", newInputHTML);
        //$(form).removeData("validator")    // Added by jQuery Validate
        //  .removeData("unobtrusiveValidation");   // Added by jQuery Unobtrusive Validation
    //    $.validator.unobtrusive.parse(form);
    //  }
    //})

    function bothFormSubmit() {
      document.getElementById("detailForm").submit();
      document.getElementById("orderForm").submit();
    };

    function detailFormSubmit() {
      document.getElementById("detailForm").submit();
    };

    function orderFormSubmit() {
      document.getElementById("orderForm").submit();
    };

  </script>
}
