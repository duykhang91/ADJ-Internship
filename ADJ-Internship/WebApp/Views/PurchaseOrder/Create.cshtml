@model ADJ.BusinessService.Dtos.OrderDTO;

<h3>PO Manager</h3>

@if (1 == 1) { }
<span class="uk-alert-danger">@ViewBag.OrderDetailError</span>

<form asp-action="Create" asp-controller="PurchaseOrder"
      id="orderForm"
data-ajax-complete="parseValidation"
      data-ajax="true"
      data-ajax-method="POST"
      data-ajax-mode="replace"
      data-ajax-update="#orderPartial">
  <input asp-for="Id" value=@Model.Id type="hidden" />
  <input asp-for="RowVersion" value=@Model.RowVersion type="hidden" />
  <input asp-for="orderDetailDTO.Id" value=@Model.orderDetailDTO.Id type="hidden" />

  <div id="orderPartial">
    <partial name="_Order" model="Model" />
  </div>


</form>

<form asp-action="AddItem" asp-controller="PurchaseOrder"
      id="detailForm"
      data-ajax="true"
      data-ajax-method="POST"
      data-ajax-mode="replace"
      data-ajax-update="#orderDetailPartial">
  <button type="submit" value="AddItem" name="method" class="uk-button uk-button-default">Add Item</button>

  @if (Model.PODetails != null)
  {
    <input asp-for="PODetails.TotalCount" value=@Model.PODetails.TotalCount type="hidden" />
    <input asp-for="PODetails.PageCount" value=@Model.PODetails.PageCount type="hidden" />
  }
  <div id="orderDetailPartial">
    <partial name="_OrderDetail" model="Model" />
  </div>

</form>



@*
  <a asp-action="Copy"
     asp-route-page="@(Model.PODetails.PageCount - 1)"
     class="btn btn-default">
    Previous
  </a>
  <a asp-action="Copy"
     asp-route-page="@(Model.PODetails.PageCount + 1)"
     class="btn btn-default">
    Next
  </a>*@

<div>
  <a asp-controller="PurchaseOrder" asp-action="Index">Back to List</a>
</div>

@section Scripts
  {
  @*@{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }*@
  <script type="text/javascript">
    $("#to").keyup(function () { $("#from").val($("#to").val()); });
    $("#from").keyup(function () { $("#to").val($("#from").val()); });

    //$("#Quantity").keyup(function () {
    //  $("#TotalUnit").html($("#Quantity").val() * $("#UnitPrice").val());
    //  $("#TotalRetail").html($("#Quantity").val() * $("#RetailPrice").val());
    //});
    //$("#UnitPrice").keyup(function (event) { $("#TotalUnit").html($("#Quantity").val()); });
    //$("#RetailPrice").keyup(function () { $("#TotalRetail").html($("#Quantity").val() * $("#RetailPrice").val()); });
    function getTotalUnit() {
      document.getElementById("TotalUnit").innerHTML = document.getElementById("Quantity").value * document.getElementById("UnitPrice").value;
    };
    function getTotalRetail() {
      document.getElementById("TotalRetail").innerHTML = document.getElementById("Quantity").value * document.getElementById("RetailPrice").value;
    };

    $("#applyButton").click(function () {
      var addModel = @Html.Raw(Json.Serialize(Model));
      var orderDetails = [];
      $.each($("input[id='itemProperty']"), function () {
        orderDetails.push($(this).val());
      });

      $.ajax({
        type: "POST",
        data: {
          orderDetails: orderDetails,
          progressCheckDTOs: addModel
        },
        url: "@Url.Action("Create", "PurchaseOrder")",
        success: function () {
          alert("Success");
        }
      });

      //$("#orderForm").append('<input>');
      //$("#orderForm").submit();
      //document.getElementById("detailForm").submit().val("test");
    });

    parseValidation = function (newInputHTML) {
      //var container = document.getElementById("form-container");
      //container.insertAdjacentHTML("beforeend", newFormHTML);
      //var forms = container.getElementsByTagName("form");
      //var newForm = forms[forms.length - 1];
      var form = document.getElementById("detailForm");
      form.insertAdjacentHTML("beforeend", newInputHTML);
      $(form).removeData("validator")    // Added by jQuery Validate
        .removeData("unobtrusiveValidation");   // Added by jQuery Unobtrusive Validation
      $.validator.unobtrusive.parse(newForm);
    };

    //$.get({
    //  url: "",
    //  dataType: "html",
    //  error: function (jqXHR, textStatus, errorThrown) {
    //    alert(textStatus + ": Couldn't add form. " + errorThrown);
    //  },
    //  success: function (newFormHTML) {
    //    var container = document.getElementById("form-container");
    //    container.insertAdjacentHTML("beforeend", newFormHTML);
    //    var forms = container.getElementsByTagName("form");
    //    var newForm = forms[forms.length - 1];
    //    $.validator.unobtrusive.parse(newForm);
    //  }
    //});

    //$.get({
    //  url: "",
    //  dataType: "html",
    //  error: function (jqXHR, textStatus, errorThrown) {
    //    alert(textStatus + ": Couldn't add control. " + errorThrown);
    //  },
    //  success: function (newInputHTML) {
        //var form = document.getElementById("detailForm");
        //form.insertAdjacentHTML("beforeend", newInputHTML);
        //$(form).removeData("validator")    // Added by jQuery Validate
        //  .removeData("unobtrusiveValidation");   // Added by jQuery Unobtrusive Validation
    //    $.validator.unobtrusive.parse(form);
    //  }
    //})

    function bothFormSubmit() {
      document.getElementById("detailForm").submit();
      document.getElementById("orderForm").submit();
    };

    function detailFormSubmit() {
      document.getElementById("detailForm").submit();
    };

    function orderFormSubmit() {
      document.getElementById("orderForm").submit();
    };

  </script>
}
