@model ADJ.BusinessService.Dtos.ConfirmArrivalDtos;
<!--Result Popup-->
@if (ViewBag.ShowModal != null)
{
  string modal = ViewBag.ShowModal;
  <button type="button" uk-toggle="target: #resultModal" id="openmodal" hidden="hidden">Open</button>

  <div id="resultModal" uk-modal>
    <div class="uk-modal-dialog uk-modal-body">
      @switch (modal)
      {
        case "Updated":
          <p>Your Arrival Date is updated</p>
          break;
        case "NoResult":
          <p>No match results were found. Please try again.</p>
          break;
        case "NoItem":
          <p>Please select at least 1 item.</p>
          break;
      }

      <p class="uk-text-right">
        <button class="uk-button uk-button-default uk-modal-close" type="button">Close</button>
      </p>

    </div>
  </div>
}

<input asp-for="FilterDtos.Status" value=@Model.FilterDtos.Status type="hidden" />

@if (Model.Containers != null)
{
  if (Model.Containers.Items != null)
  {
    int start = 0;
    int groupId = 0;
    Model.ListArrivalDate = new List<DateTime>();


    for (int i = 0; i < Model.Containers.Items.Count; i++)
    {
      if ((i + 1 < Model.Containers.Items.Count) || (i == (Model.Containers.Items.Count - 1)))
      {
        //int different = 0;
        //if (i + 1 < Model.Containers.Items.Count)
        //{
        //  different = Model.Containers.Items[i].ArrivalDate.CompareTo(Model.Containers.Items[i + 1].ArrivalDate)
        //    + Model.Containers.Items[i].Carrier.CompareTo(Model.Containers.Items[i + 1].Carrier)
        //    + Model.Containers.Items[i].Mode.CompareTo(Model.Containers.Items[i + 1].Mode)
        //    + Model.Containers.Items[i].Origin.CompareTo(Model.Containers.Items[i + 1].Origin)
        //    + Model.Containers.Items[i].DestinationPort.CompareTo(Model.Containers.Items[i + 1].DestinationPort);
        //}

        if ((i == (Model.Containers.Items.Count - 1)) || (Model.Containers.Items[i].ArrivalDate.CompareTo(Model.Containers.Items[i + 1].ArrivalDate) != 0)
          || (Model.Containers.Items[i].Carrier.CompareTo(Model.Containers.Items[i + 1].Carrier) != 0)
          || (Model.Containers.Items[i].Mode.CompareTo(Model.Containers.Items[i + 1].Mode) != 0)
          || (Model.Containers.Items[i].Origin.CompareTo(Model.Containers.Items[i + 1].Origin) != 0)
          || (Model.Containers.Items[i].DestinationPort.CompareTo(Model.Containers.Items[i + 1].DestinationPort) != 0))
        {
          DateTime dateTime = new DateTime();
          Model.ListArrivalDate.Add(dateTime);
          <table class="uk-table uk-table-small uk-table-middle uk-table-striped uk-width-3-4">
            <thead>
              <tr>
                <td>
                  <label asp-for="Containers.Items[start].DestinationPort"></label>
                </td>
                <td>
                  <label asp-for="Containers.Items[start].Origin"></label>
                </td>
                <td>
                  <label asp-for="Containers.Items[start].Mode"></label>
                </td>
                <td>
                  <label asp-for="Containers.Items[start].Carrier"></label>
                </td>
                <td>
                  <label asp-for="ListArrivalDate"></label>
                </td>
              </tr>
            </thead>
            <tr>
              <td>@Model.Containers.Items[start].DestinationPort</td>
              <td>@Model.Containers.Items[start].Origin</td>
              <td>@Model.Containers.Items[start].Mode</td>
              <td>@Model.Containers.Items[start].Carrier</td>
              <td>
                @if (Model.FilterDtos.Status == ADJ.Common.ContainerStatus.Arrived.ToString())
                {
                  <input asp-for="ListArrivalDate[groupId]" value=@Model.Containers.Items[start].ArrivalDate.ToString("yyyy-MM-dd") class="uk-input" type="date" disabled />
                }
                else
                {
                  <input asp-for="ListArrivalDate[groupId]" value=@Model.Containers.Items[start].ArrivalDate.ToString("yyyy-MM-dd") class="uk-input" type="date" />
                }
              </td>
            </tr>
          </table>

          <table class="uk-table uk-table-small uk-table-middle uk-table-striped uk-width-1-2">
            <thead>
              <tr>
                <td>
                  <input type="checkbox" class="uk-checkbox checkAll" id="checkAll_@i" />
                </td>
                <td>
                  <label asp-for="Containers.Items[start].Vendor"></label>
                </td>
                <td>
                  <label asp-for="Containers.Items[start].Container"></label>
                </td>
                <td>
                  <label asp-for="Containers.Items[start].Status"></label>
                </td>
              </tr>
            </thead>
            @for (int j = start; j < i + 1; j++)
            {
              <tr>
                <td style="display: none">
                  <input asp-for="Containers.Items[j].Id" type="hidden" />
                  <input asp-for="Containers.Items[j].GroupId" value=@groupId type="hidden" />

                  <input asp-for="Containers.Items[j].DestinationPort" value=@Model.Containers.Items[j].DestinationPort type="hidden" />
                  <input asp-for="Containers.Items[j].Origin" value=@Model.Containers.Items[j].Origin type="hidden" />
                  <input asp-for="Containers.Items[j].Mode" value=@Model.Containers.Items[j].Mode type="hidden" />
                  <input asp-for="Containers.Items[j].Carrier" value=@Model.Containers.Items[j].Carrier type="hidden" />
                  <input asp-for="Containers.Items[j].ArrivalDate" value=@Model.Containers.Items[j].ArrivalDate type="hidden" />

                  <input asp-for="Containers.Items[j].Vendor" value=@Model.Containers.Items[j].Vendor type="hidden" />
                  <input asp-for="Containers.Items[j].Container" value=@Model.Containers.Items[j].Container type="hidden" />
                  <input asp-for="Containers.Items[j].Status" value=@Model.Containers.Items[j].Status type="hidden" />
                </td>
                <td>
                  @if (Model.Containers.Items[j].Status == ADJ.Common.ContainerStatus.Despatch)
                  {
                    <input asp-for="Containers.Items[j].Selected" type="checkbox" class="uk-checkbox checkBox_@i" />
                  }
                </td>
                <td>@Model.Containers.Items[j].Vendor</td>
                <td>@Model.Containers.Items[j].Container</td>
                <td>@Model.Containers.Items[j].Status</td>
              </tr>
            }
          </table>

          groupId++;
          start = i + 1;
        }
      }
    }
  }
}

<!--Paging-->
@{
  int currentPage = ViewBag.Page;
  int totalPage = Model.Containers.PageCount;

  <ul class="uk-pagination uk-flex-center">
    @if (currentPage > 1)
    {
      <li><a value="@(currentPage - 1)" name="page" class="paging"><span uk-pagination-previous></span></a></li>
    }

    @for (int i = 1; i <= totalPage; i++)
    {
      if (i == currentPage)
      {
        <li class="uk-disabled"><a value="@i" name="page" class="paging">@i</a></li>
      }
      else
      {
        <li><a value="@i" name="page" class="paging">@i</a></li>
      }
    }

    @if (currentPage < totalPage)
    {
      <li><a value="@(currentPage + 1)" name="page" class="paging"><span uk-pagination-next></span></a></li>
    }
  </ul>
}