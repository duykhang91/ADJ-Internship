@model ADJ.Common.PagedListResult<ADJ.BusinessService.Dtos.ProgressCheckDto>
@using (Html.BeginForm())
{
  <div class="uk-container">
    <div class="uk-grid">
      <div class="uk-width-1-3">
        <table class="uk-table uk-table-small">
          <tbody>
            <tr>
              <td><label>Origin</label></td>
              <td>
                <div onchange="changePorts()" class="uk-form-select" data-uk-form-select>
                  @Html.DropDownList("Origins", new SelectList(ViewBag.Origins), new { @id = "Origins", @class = "uk-select" })
                </div>
              </td>
            </tr>
            <tr>
              <td><label>Origin Port</label></td>
              <td>
                <div class="col-md-10">
                  <select class="uk-input ports" id="OriginPorts"></select>
                  <span class="uk-alert-danger"></span>
                </div>
              </td>
            </tr>
            <tr>
              <td><label>Factory</label></td>
              <td>
                <div class="uk-form-select" data-uk-form-select>
                  <span></span>
                  @Html.DropDownList("Factories", new SelectList(ViewBag.Factories), "Any", new { @id = "Factories", @class = "uk-select" })
                </div>
              </td>
            </tr>
            <tr>
              <td><label>Vendor</label></td>
              <td>
                <div class="uk-form-select" data-uk-form-select>
                  @Html.DropDownList("Vendor", new SelectList(ViewBag.Suppliers), "Any", new { @id = "Vendor", @class = "uk-select" })
                </div>
              </td>
            </tr>
            <tr>
              <td><label>Status</label></td>
              <td>
                <div class="uk-form-select" data-uk-form-select>
                  @Html.DropDownList("Status", new SelectList(ViewBag.Status), "Any", new { @id = "Status", @class = "uk-select" })
                </div>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
      <div class="uk-width-1-3">
        <table class="uk-table">
          <tbody>
            <tr>
              <td><label>Dept</label></td>
              <td>
                <div class="uk-form-select" data-uk-form-select>
                  @Html.DropDownList("Depts", new SelectList(ViewBag.Depts), "Any", new { @id = "Depts", @class = "uk-select" })

                </div>
              </td>
            </tr>
            <tr>
              <td><label>PO Number</label></td>
              <td>
                <input id="PONumberSearch" class="uk-input" />

              </td>
            </tr>
            <tr>
              <td><label>Item</label></td>
              <td>
                <input id="ItemSearch" class="uk-input" />
              </td>
            </tr>
          </tbody>
        </table>

      </div>

      <div class="uk-width-1-3">
        <table class="uk-table uk-table-small">
          <tbody>
            <tr>
              <td>
                <button type="button" class="filterItem uk-button uk-button-primary" value=1>Search</button>
              </td>
            </tr>
            <tr>
              <td>
                <input id="Achieve" asp-action="CreateOrUpdate" asp-controller="ProgressCheck" class="uk-button uk-button-danger" type="submit" data-uk-button value="Achieve">
              </td>
            </tr>

          </tbody>
        </table>

      </div>
    </div>
  </div>
  <br />
  <br />
  <div id="renderSearching">
    @for (int i = 0; i < Model.Items.Count(); i++)
    {
      <div class="uk-grid uk-margin-small uk-width-1-2">
        @Html.HiddenFor(model => model.Items[i].OrderId, new { Value = Model.Items[i].OrderId })
        @Html.HiddenFor(model => model.Items[i].Id, new { Value = Model.Items[i].Id })
        <table class="uk-table uk-table-small">
          <thead>
            <tr>
              <td>
                Vendor
              </td>
              <td>
                Factory
              </td>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>@Model.Items[i].Supplier</td>
              @Html.HiddenFor(model => model.Items[i].Supplier)
              <td>@Model.Items[i].Factory</td>
              @Html.HiddenFor(model => model.Items[i].Factory)
            </tr>
          </tbody>
        </table>
        <table class="uk-table uk-table-small uk-width-3-4">
          <thead>
            <tr>
              <td></td>
              <td>
                PO Number
              </td>
              <td>
                PO Quantity
              </td>
              <td>
                PO Check Quantity
              </td>
              <td>
                PO Ship Date
              </td>
              <td>
                Inspection Date
              </td>
              <td>
                Int Ship Date
              </td>
              <td>
                PO Quantity Complete
              </td>
            </tr>
          </thead>
          <tbody>
            <tr>
              @if (Model.Items[i].Complete == false)
              {
                <td>
                  <input class="uk-checkbox" type="checkbox" asp-for="Items[i].selected" />
                </td>
              }
              else
              {
                <td></td>
              }
              <td>@Model.Items[i].PONumber</td>
              @Html.HiddenFor(model => model.Items[i].PONumber)
              <td>@Model.Items[i].POQuantity</td>
              @Html.HiddenFor(model => model.Items[i].POQuantity)
              <td>@Model.Items[i].EstQtyToShip</td>
              @Html.HiddenFor(model => model.Items[i].EstQtyToShip)
              <td>@Model.Items[i].ShipDate.ToString("MM/dd/yyyy")</td>
              @{
                if (Model.Items[i].Complete == true)
                {
                  <td>
                    <input readonly type="date" asp-for="Items[i].InspectionDate" class=" uk-input" />
                  </td>
                  <td>
                    <input readonly type="date" asp-for="Items[i].IntendedShipDate" class=" uk-input" />
                  </td>
                }
                else
                {
                  <td>
                    <input type="date" asp-for="Items[i].InspectionDate" class=" uk-input" />
                    <span class=" uk-text-danger" asp-validation-for="Items[i].InspectionDate"></span>
                  </td>
                  <td>
                    <input type="date" asp-for="Items[i].IntendedShipDate" class=" uk-input" />
                    <span class=" uk-text-danger" asp-validation-for="Items[i].IntendedShipDate"></span>
                  </td>
                }
              }

              <td>
                @if (@Model.Items[i].Complete == true)
                {
                  <p>YES</p>
                }
                else
                {
                  <p>NO</p>
                }
                @Html.HiddenFor(model => model.Items[i].Complete)
              </td>
            </tr>
          </tbody>
        </table>
        <table class="uk-table uk-table-small">
          <thead>
            <tr>
              <td></td>
              <td>
                Item Number
              </td>
              <td>
                Item Quantity
              </td>
              <td>
                Revise Quantity
              </td>
            </tr>
          </thead>
          <tbody>
            @for (int j = 0; j < Model.Items[i].ListOrderDetailDto.Count(); j++)
            {
              <tr>
                @if (Model.Items[i].Complete == false)
                {
                  <td>
                    <input class="uk-checkbox" type="checkbox" asp-for="Items[i].ListOrderDetailDto[j].selected" />
                  </td>
                }
                else
                {
                  <td></td>
                }
                @Html.HiddenFor(model => model.Items[i].ListOrderDetailDto[j].Id)
                <td>@Model.Items[i].ListOrderDetailDto[j].ItemNumber</td>
                <td>@Model.Items[i].ListOrderDetailDto[j].Quantity</td>
                @Html.HiddenFor(model => model.Items[i].ListOrderDetailDto[j].Quantity)
                @{
                  if (Model.Items[i].Complete == true)
                  {
                    <td>
                      <input readonly type="number" asp-for="Items[i].ListOrderDetailDto[j].ReviseQuantity" class=" uk-input" />
                    </td>
                  }
                  else
                  {
                    <td>
                      <input type="number" asp-for="Items[i].ListOrderDetailDto[j].ReviseQuantity" class=" uk-input" />
                      <span class=" uk-text-danger" asp-validation-for="Items[i].ListOrderDetailDto[j].ReviseQuantity"></span>
                    </td>
                  }
                }

              </tr>
            }
          </tbody>
        </table>
      </div>
      <br />
    }

    <div class="uk-align-right">
      <ul class="uk-pagination">
        @{
          if (ViewBag.pageIndex > 1)
          {
            <li><a asp-action="Index" asp-controller="ProgressCheck" asp-route-pageIndex="@(ViewBag.pageIndex - 1)" class="page-link"><span uk-pagination-previous></span></a></li>
          }
          for (var i = 1; i <= Model.PageCount; i++)
          {
            if (i == ViewBag.pageIndex)
            {
              <li class="uk-disabled">
                <a asp-action="Index" asp-controller="ProgressCheck" asp-route-pageIndex="@i" class="page-link"><u>@i</u></a>
              </li>
            }
            else
            {
              <li class="uk-active">
                <a asp-action="Index" asp-controller="ProgressCheck" asp-route-pageIndex="@i" class="page-link">@i</a>
              </li>
            }
          }
          if (ViewBag.pageIndex < Model.PageCount)
          {
            <li><a asp-action="Index" asp-controller="ProgressCheck" asp-route-pageIndex="@(ViewBag.pageIndex + 1)" class="page-link"><span uk-pagination-next></span></a></li>
          }
        }

      </ul>
    </div>
  </div>
}
@if (ViewBag.check == 1)
{
  <button type="button" uk-toggle="target: #modal-center" id="openmodal" hidden="hidden">Open</button>
  <div id="modal-center" class="uk-flex-top" uk-modal>
    <div class="uk-modal-dialog uk-modal-body uk-margin-auto-vertical">
      <button class="uk-modal-close-default" type="button" uk-close></button>
      @foreach (var item in ViewBag.POUpdate)
      {
        <p class="uk-text-success uk-text-bold">Your PO @item has been successfully updated</p>
      }
    </div>
  </div>
}
@foreach (var item in ViewBag.VNPorts)
{
  <p class="vnPorts" hidden="hidden">@item</p>
}

@foreach (var item in ViewBag.HKPorts)
{
  <p class="hkPorts" hidden="hidden">@item</p>
}
<script src="~/js/jquery-3.3.1.min.js"></script>
<script type="text/javascript">
  $(document.body).on('click', '.filterItem', function () {
    var pageIndex = $(this).attr("value");
        $.ajax({
            type: "GET",
            dataType:"html",
            url: "@Url.Action("Index", "ProgressCheck")",
            data: {
                pageIndex:pageIndex,
                Vendor: $('#Vendor').val(),
                Factories: $('#Factories').val(),
                Origins: $('#Origins').val(),
              OriginPorts: $('#OriginPorts option:selected').val(),
                Depts: $('#Depts').val(),
                PONumberSearch: $('#PONumberSearch').val(),
                ItemSearch: $('#ItemSearch').val(),
                Status: $('#Status').val(),
                checkClick:true,
            },
            success: function (data) {
                $('#renderSearching').html(data);
            }
        });
    });
    $("#Achieve").click(function (event) {
      if (!confirm('Are you sure that you want to submit the form'))
        event.preventDefault();
  });
  $(document).ready(function () {
    $('#openmodal').trigger('click');
    changePorts();
  });
  function changePorts() {
    var origin = $("#Origins").val();
    var vnPorts = document.getElementsByClassName("vnPorts");
    var hkPorts = document.getElementsByClassName("hkPorts");
    var ports = document.getElementsByClassName("ports");
    var options = [];
    if (origin == "Vietnam") {
      $.each(vnPorts, function () {
        options.push($(this).text());
      });
    }
    else if (origin == "HongKong") {
      $.each(hkPorts, function () {
        options.push($(this).text());
      });
    }
    for (i = 0; i < ports.length; i++) {
      ports[i].options.length = 0;
      ports[i].options[ports[i].options.length] = new Option("Any","");
      for (j = 0; j < options.length; j++) {
        ports[i].options[ports[i].options.length] = new Option(options[j], options[j]);
      }
    }
  };
  $("#modal-center").on({
    'hide.uk.modal': function () {
      window.location.href = "/ProgressCheck";
    }
  });
</script>



