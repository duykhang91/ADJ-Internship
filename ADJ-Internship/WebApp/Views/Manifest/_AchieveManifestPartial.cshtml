@model ADJ.Common.PagedListResult<ADJ.BusinessService.Dtos.ShipmentManifestsDtos>
@for (var i = 0; i < Model.Items.Count(); i++)
{
  @Html.HiddenFor(model => model.Items[i].Id, new { Value = Model.Items[i].Id })
  @Html.HiddenFor(model => model.PageCount, new { Value = Model.PageCount })
  @Html.HiddenFor(model => model.CurrentFilter)
  <br />
  <br />
  <div class="uk-grid uk-card uk-card-default uk-card-body">
    <table class="uk-table uk-table-striped uk-table-middle uk-table-small uk-width-1-2">
      <thead>
        <tr>
          <td style="width:45px"></td>
          <td>
            <span style="color: red">*</span>
            Container
          </td>
          <td>
            Size
          </td>
          <td>
            Mode
          </td>
          <td>
            Pack Type
          </td>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="width:45px">
            @if (Model.Items[i].Id == 0)
            {
              <input class="uk-checkbox" asp-for="Items[i].selectedContainer" />
            }
          </td>
          <td>
            @{
              if (Model.Items[i].Id == 0)
              {
                <input id="validationName" asp-for="Items[i].Name" class="validationName uk-input" />
                <span class=" uk-text-danger" asp-validation-for="Items[i].Name" id="validationShipQuantity"></span>
                <span class=" uk-text-danger">@ViewBag.nameUnique</span>
              }
              else
              {
                <input readonly id="validationName" asp-for="Items[i].Name" class="validationName uk-input" />
              }

            }

          </td>
          @{
            if (Model.Items[i].Id == 0)
            {
              <td>
                <select asp-for="Items[i].Size" asp-items="new SelectList(ViewBag.Size)" class="uk-select filters" id="size"></select>
              </td>
              <td>
                <select asp-for="Items[i].Loading" asp-items="new SelectList(ViewBag.Loading)" class="uk-select filters" id="loading"></select>
              </td>
              <td>
                <select asp-for="Items[i].PackType" asp-items="new SelectList(ViewBag.PackType)" class="uk-select filters" id="packtype"></select>
              </td>
            }
            else
            {
              <td>
                @Model.Items[i].Size
              </td>
              <td>
                @Model.Items[i].Loading
              </td>
              <td>
                @Model.Items[i].PackType
              </td>
            }
          }
        </tr>
      </tbody>
    </table>
    <div style="overflow-x: auto">
      <table class="uk-table uk-table-striped uk-table-middle uk-table-small">
        <thead>
          <tr>
            <td style="width:40px"></td>
            <td>
              Vendor
            </td>
            <td>
              Carrier
            </td>
            <td>
              PO Number
            </td>
            <td>
              Item Number
            </td>
            <td>
              ETD Date
            </td>
            <td>
              Booking Quantity
            </td>
            <td>
              Open Quantity
            </td>
            <td>
              <span style="color: red">*</span>
              Ship Quantity
            </td>
            <td>
              Booking Carton
            </td>
            <td>
              Ship Carton
            </td>
            <td>
              Booking Cube
            </td>
            <td>
              Ship Cube
            </td>
            <td>
              Net Weight
            </td>
            @*<td>
                Gross Weight
              </td>*@
            <td>
              Manifested
            </td>
          </tr>
        </thead>
        <tbody>
          @for (var j = 0; j < Model.Items[i].Manifests.Count(); j++)
          {
            @Html.HiddenFor(model => model.Items[i].Manifests[j].BookingId, new { Value = Model.Items[i].Manifests[j].BookingId })
            @Html.HiddenFor(model => model.Items[i].Manifests[j].PONumber, new { Value = Model.Items[i].Manifests[j].PONumber })
            @Html.HiddenFor(model => model.Items[i].Manifests[j].ItemNumber, new { Value = Model.Items[i].Manifests[j].ItemNumber })
            @Html.HiddenFor(model => model.Items[i].Manifests[j].BookingQuantity, new { Value = Model.Items[i].Manifests[j].BookingQuantity })
            @Html.HiddenFor(model => model.Items[i].Manifests[j].Id, new { Value = Model.Items[i].Manifests[j].Id })
            @Html.HiddenFor(model => model.Items[i].Manifests[j].OpenQuantity, new { Value = Model.Items[i].Manifests[j].OpenQuantity })
            @Html.HiddenFor(model => model.Items[i].Manifests[j].Carrier, new { Value = Model.Items[i].Manifests[j].Carrier })
            @Html.HiddenFor(model => model.Items[i].Manifests[j].Vendor, new { Value = Model.Items[i].Manifests[j].Vendor })
            @Html.HiddenFor(model => model.Items[i].Manifests[j].Manifested, new { Value = Model.Items[i].Manifests[j].Manifested })
            @Html.HiddenFor(model => model.Items[i].Manifests[j].ETDDate, new { Value = Model.Items[i].Manifests[j].ETDDate })
            <tr>
              <td style="width:45px">
                @if (Model.Items[i].Id == 0)
                {
                  <input class="uk-checkbox" asp-for="Items[i].Manifests[j].selectedItem" />
                }
              </td>

              @if (Model.Items[i].Manifests[j].Vendor != null)
              {
                <td>@Model.Items[i].Manifests[j].Vendor</td>
              }
              else
              {
                <td>N/A</td>
              }
              <td>
                @Model.Items[i].Manifests[j].Carrier
              </td>
              <td>
                @Model.Items[i].Manifests[j].PONumber
              </td>
              <td>
                @Model.Items[i].Manifests[j].ItemNumber
              </td>
              <td>
                @Model.Items[i].Manifests[j].ETDDate.ToString("MM/dd/yyyy")
              </td>
              <td>
                @Model.Items[i].Manifests[j].BookingQuantity.ToString("N0")
              </td>
              <td>
                @Model.Items[i].Manifests[j].OpenQuantity.ToString("N0")
              </td>
              <td>
                @{
                  if (Model.Items[i].Id > 0)
                  {
                    @Model.Items[i].Manifests[j].ShipQuantity.ToString("N0")
                    @Html.HiddenFor(model => model.Items[i].Manifests[j].ShipQuantity, new { Value = Model.Items[i].Manifests[j].ShipQuantity })
                  }
                  else
                  {
                    <input type="number" value="0" id="@(Model.Items[i].Manifests[j].ItemNumber)" asp-for="Items[i].Manifests[j].ShipQuantity" class="validationShipQuantity uk-input" />
                    <span class=" uk-text-danger" asp-validation-for="Items[i].Manifests[j].ShipQuantity" id="validationShipQuantity"></span>
                  }
                }
              </td>
              <td>
                @Model.Items[i].Manifests[j].BookingCartons.ToString("N0")
              </td>
              <td>
                <input id="@("shipCarton"+@Model.Items[i].Manifests[j].ItemNumber)" value="0" asp-for="Items[i].Manifests[j].ShipCartons" readonly class=" uk-input" />
              </td>
              <td>
                @Model.Items[i].Manifests[j].BookingCube.ToString("N0")
              </td>
              <td>
                <input id="@("shipCube"+@Model.Items[i].Manifests[j].ItemNumber)" value="0" asp-for="Items[i].Manifests[j].ShipCube" readonly class=" uk-input" />
              </td>
              <td>
                <input id="@("netWeight"+@Model.Items[i].Manifests[j].ItemNumber)" value="0" asp-for="Items[i].Manifests[j].NetWeight" readonly class=" uk-input" />
              </td>
              @*<td>
                  @Model.Items[i].Manifests[j].GrossWeight
                </td>*@
              <td>
                @Model.Items[i].Manifests[j].Manifested
              </td>
              <td style="display:none">
                <input id="@("carton"+Model.Items[i].Manifests[j].ItemNumber)" value="@Model.Items[i].Manifests[j].Carton" asp-for="Items[i].Manifests[j].Carton" class=" uk-input" />
              </td>
              <td style="display:none">
                <input id="@("cube"+Model.Items[i].Manifests[j].ItemNumber)" value="@Model.Items[i].Manifests[j].Cube" asp-for="Items[i].Manifests[j].Cube" class=" uk-input" />
              </td>
              <td style="display:none">
                <input id="@("kgs"+Model.Items[i].Manifests[j].ItemNumber)" value="@Model.Items[i].Manifests[j].Carton" asp-for="Items[i].Manifests[j].KGS" class=" uk-input" />
              </td>
            </tr>
          }
        </tbody>
      </table>
    </div>
  </div>
}
<div class="uk-align-right">
  <ul class="uk-pagination">
    @{
      if (ViewBag.pageIndex > 1)
      {
        <li><a value="@(ViewBag.pageIndex - 1)" class="filterItem page-link"><span uk-pagination-previous></span></a></li>
      }
      for (var i = 1; i <= Model.PageCount; i++)
      {
        if (i == ViewBag.pageIndex)
        {
          <li class="uk-disabled">
            <a value="@i" class="page-link"><u>@i</u></a>
          </li>
        }
        else
        {
          <li class="uk-active">
            <a value="@i" class="filterItem page-link">@i</a>
          </li>
        }
      }
      if (ViewBag.pageIndex < Model.PageCount)
      {
        <li><a value="@(ViewBag.pageIndex + 1)" class="filterItem page-link"><span uk-pagination-next></span></a></li>
      }
    }
  </ul>
</div>
@if (ViewBag.modalResult != null)
{
  <button type="button" uk-toggle="target: #modal-center" id="openmodal" hidden="hidden">Open</button>
  <div id="modal-center" class="uk-flex-top" uk-modal>
    <div class="uk-modal-dialog uk-modal-body uk-margin-auto-vertical">
      <button class="uk-modal-close-default" type="button" uk-close></button>
      @{
        if (ViewBag.modalResult == "invalid")
        {
          <p class="uk-text-danger uk-text-bold">Ship Quantity is invalid, please try again</p>
        }
        else if (ViewBag.modalResult == "empty")
        {
          <p class="uk-text-danger uk-text-bold">Please check your container.</p>
        }
        else if (ViewBag.modalResult == "zero")
        {
          <p class="uk-text-danger uk-text-bold">Please enter your ship quantity.</p>
        }
        else if (ViewBag.modalResult == "emptybooking")
        {
          <p class="uk-text-danger uk-text-bold">Please check your shipment booking .</p>
        }
      }
    </div>
  </div>
}
@if (ViewBag.modalResult == "success")
{
  <button type="button" uk-toggle="target: #modal-success" id="successmodal" hidden="hidden">Open</button>
  <div id="modal-success" class="uk-flex-top" uk-modal>
    <div class="uk-modal-dialog uk-modal-body uk-margin-auto-vertical">
      <button class="uk-modal-close-default" type="button" uk-close></button>
      <p class="uk-text-success uk-text-bold">Your shipment is successfully manifested</p>
    </div>
  </div>
}
